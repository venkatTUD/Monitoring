apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-service-account # A dedicated ServiceAccount for Prometheus
  namespace: dev # Or the namespace where you deployed Prometheus

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole # ClusterRole grants permissions across the entire cluster
metadata:
  name: prometheus-cluster-role
rules:
- apiGroups: [""] # Refers to the core API group
  resources:
  - nodes # Prometheus needs to list nodes
  - nodes/proxy
  - services # Prometheus needs to list services for discovery
  - endpoints # Prometheus needs to list endpoints for discovery
  - pods # Prometheus needs to list pods for discovery
  verbs: ["get", "list", "watch"] # Granting read-only permissions

- apiGroups: ["extensions", "networking.k8s.io"] # For Ingress discovery if you use it
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]

- nonResourceURLs: ["/metrics"] # Allow access to the /metrics endpoint on nodes
  verbs: ["get"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding # ClusterRoleBinding grants the ClusterRole permissions to a ServiceAccount
metadata:
  name: prometheus-cluster-role-binding
subjects:
- kind: ServiceAccount
  name: prometheus-service-account # Name of the ServiceAccount created above
  namespace: dev # Namespace of the ServiceAccount
roleRef:
  kind: ClusterRole
  name: prometheus-cluster-role # Name of the ClusterRole created above
  apiGroup: rbac.authorization.k8s.io
